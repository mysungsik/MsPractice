- FUNCTION

[1. 함수 파라미터에 기본값 추가하기] 
[2. 나머지연산자(rest parmeter)[...] 동적으로 파라미터를 추가할 수 있는 함수 만들기]
[3. 스프레드 연산자(spread parmeter)[...]를 통해 [배열으로 된 변수를, 하나하나씩의 값으로 만들기]]
[4. 함수도 [객체]이다.]
[5. "템플릿 리터럴" 을 사용한 [변수를 포함한 동적인 코드]]
[6. 기본값과 참조값]
[7. try catch 를 통해 [함수의 오류를 처리하고, 끊기지 않는 함수 만들기]]
[8. Block scoping 개념을 꼭 기억하자]

* 노드JS에서는 module.exports 와 require() 로 값을 주고받지만
* javaScript와 HTML은 그냥 script로 액세스 할 수 있다는 사실을 잊지말자


- OBJECT

[1. new 란 무엇인가,  Date 는 왜 저렇게 쓰이는가, this는 무엇인가]
[2-1. 생성자함수 만들기 - 객체를 만드는  constructor]
[2-2. 생성자함수 만들기 - 함수 추가]
[3. 배열 비구조화]
[4. 객체 비구조화]


- ASYNC

[1. sync(동기식) 와 async(비동기식)]
[2. 비동기작업의 콜백함수의 지옥에서 탈출하기 - Promise] 
[3. async 와 await 를 사용한, 동기식처럼 보이는 비동기식 처리]

