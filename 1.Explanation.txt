1. Ajax란? [ 비동기식 자바스크립트와 XML]

    : [자바스크립트를 통해] [HTTP 요청을 보내는것에 관한 개념!]
    : [NODE가 아니라 자바스립트에서!! HTTP 요청을!!]

        * 지금까지 URL을 입력하면, 브라우저가 해당 URL로 get 요청을 보냈다는 사실을 잊지말자. 
            링크를 눌렀을때도, Form 양식을 보낼때도, 전부 NODE를 통해 [html 파일을 render하거나, redirect 하거나] 해서 응답했다.

2. Ajax의 사용 [ 비동기식 자바스크립트의 사용]

    : [브라우저측 자바스크립트로 요청을 보내고] [ 브라우저측 자바스크립트가 응답한다!]

    ==>> [새 페이지를 불러올 필요도] [새로고침을 할 필요도 없는 페이지가 만들어진다.]

    [예시]
        : 페이지의 [댓글창을 열었다 접었다] 하는 페이지가 있다.

    1. without Ajax 
        : [열린 댓글창, 닫힌 댓글창, 서로 다른 URL(혹은 쿼리메소드)을 받아] [어쨋든 새로운 페이지를 연다]
            ==>> 스크롤했던 페이지도 다시 맨 위로 올라가고, 썼던 값도 다 리셋

    2. WITH Ajax
        : [자바스크립트로 열듯, 페이지 자체가 바뀐다.] HTML 페이지가 바뀌는것 [자바스크립트를 쓸 때를 기억하자]
            ==>> 쓰던것 그대로, [요청만 처리된 페이지로 바뀐다.]    * 페이지의 정보 자체가 바뀐다. 


3. XMLHttpRequest
    : 브라우저(자바스크립트) 에서 사용할 수 있는 내장 객체
        HTTP요청을 보내고, 응답을 보낼 수있다.

    특징 : [굉장히 투박하다 오래되어서] [다루기 어렵다.]
-           ==>> 그래서 [타사패키지]를 사용하여 다룬다. ex) Axios 패키지

4. XML이란?
    : 기계가 읽을 수 있는 언어로 되어있는 [텍스트데이터]
        [표준화 되어있지 않고, 복잡함] , [복잡하고 긴 구문을 사용해야해서] [더이상 사용하지 않음!]

    ==> [표준화된 XML] : [HTML 코드]
    ==> [나아진 XML 데이터포맷] : [JSON (JavaScript Object Notation)]

    ==> 이젠 JSON, HTML 쓰는것이다.
-   [그럼에도 불구하고 XML에서 쓰던 XMLHttpRequest은, 여전히 요청형식으로 JSON 에도 사용 가능하므로 아직도 매우 잘 사용한다.]

    ==>> 결론적으로 [XMLHttpRequest] 는 이름과는 달리 [XML 요청이 아니라] [JSON을 보내는 요청이 되어버렸다]

5. Fetch() ****************************************
    : 브라우저(자바스크립트) 에서 사용할 수 있는 내장객체
        HTTP요청을 보내고, 응답을 보낼 수있다.

-       [XMLHttpRequest] 보다 최신 기술로 [비동기식 처리에 promise를 지원한다] *XMLHttpRequest 는 Promise를 지원하지 않는다.
        [XMLHttpRequest 의 대안으로] [promise, 간단한 코드 등 사용하기 매우 편하다]

6. [XMLHttpRequest VS Fetch()]
    : 결국 둘 중 하나를 사용하게 된다. [ 비동기식 자바스크립트의 HTTP 요청으로]

    1. XMLHttpRequest
        : Axios 라는 타사패키지가 있음에도 [불편]
        
    2. Fetch() ***********
        : [아주 편한 Ajax 시스템]